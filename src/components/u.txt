import React, { useState, useEffect } from 'react';
import { Box, TextField, Typography, Checkbox, FormControlLabel, Button as MUIButton } from '@mui/material';
import img1 from '../images/1.jpg';
import img2 from '../images/2.jpg';
import img3 from '../images/3.jpg';
import img4 from '../images/4.jpg';
import img5 from '../images/5.jpg';
import img6 from '../images/6.jpg';
import img7 from '../images/7.jpg';
import img8 from '../images/8.jpg';
import img9 from '../images/9.jpg';
import img10 from '../images/10.jpg';
import img11 from '../images/11.jpg';


const profileImages = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11];
const UserLogin = ({ email, password, setEmail, setPassword, onSubmit, error: propError }) => {
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [error, setError] = useState(propError || '');

  // Update local error state if prop changes
  useEffect(() => {
    setError(propError);
  }, [propError]);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImageIndex((prev) => (prev + 1) % profileImages.length);
    }, 2000);
    return () => clearInterval(interval);
  }, []);

  // Clear error on input focus
  const handleFocus = () => {
    if (error) setError('');
  };

  return (
    <Box
      display="flex"
      flexDirection="column"
      justifyContent="center"
      alignItems="center"
      height="100vh"
      bgcolor="#ffffff"
      width="100vw"
      minHeight="100vh"
    >
      {/* Logo */}
      <img
        src="/assets/logos.png"
        alt="Logo"
        style={{ width: '170px', marginBottom: '4px', marginTop: '-30px' }}
      />

      {/* Login Box */}
      <Box
        width="350px"
        padding="32px"
        bgcolor="white"
        borderRadius="12px"
        textAlign="center"
      >
        <Box mb={-1} display="flex" justifyContent="center">
          <img
            src="/assets/userlogin.png"
            alt="Logo"
            style={{ height: 80, objectFit: 'contain', marginTop:'-15px' }}
          />
        </Box>

        <TextField
          type="email"
          label="Email"
          variant="outlined"
          fullWidth
          margin="normal"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          onFocus={handleFocus}
          sx={{
            '& .MuiOutlinedInput-root': {
              borderRadius: '12px',
            },
          }}
        />

        <TextField
          type="password"
          label="Password"
          variant="outlined"
          fullWidth
          margin="normal"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          onKeyDown={(e) => e.key === 'Enter' && onSubmit()}
          onFocus={handleFocus}
          sx={{
            '& .MuiOutlinedInput-root': {
              borderRadius: '12px',
            },
          }}
        />

        {/* Error message with fixed height to prevent layout shift */}
        <Box
          height={24} // fix height to reserve space
          mt={1}
          mb={2}
          display="flex"
          alignItems="center"
        >
          <Typography
            variant="body2"
            color="error"
            sx={{
              visibility: error ? 'visible' : 'hidden',
              whiteSpace: 'nowrap',
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              width: '100%',
            }}
          >
            {error || ' '}
          </Typography>
        </Box>

        <Box
          display="flex"
          justifyContent="space-between"
          alignItems="center"
          mt={1}
          mb={2}
        >
          <FormControlLabel
            control={<Checkbox size="small" color="primary" />}
            label={
              <Typography
                variant="body2"
                color="textSecondary"
                sx={{ fontWeight: 500, fontSize: '0.875rem' }}
              >
                Remember me
              </Typography>
            }
            sx={{ m: 0 }}
          />

          <Typography
            variant="body2"
            color="primary"
            sx={{
              cursor: 'pointer',
              textDecoration: 'none',
              fontWeight: 600,
              '&:hover': {
                textDecoration: 'none',
                color: 'primary.dark',
              },
            }}
          >
            Forgot Password?
          </Typography>
        </Box>

        <MUIButton
          variant="contained"
          fullWidth
          onClick={onSubmit}
          sx={{
            background: 'linear-gradient(90deg, #001f3f 0%, #003366 100%)',
            color: '#fff',
            fontWeight: 600,
            borderRadius: 1.5,
            paddingY: 1.2,
            fontSize: '1rem',
            letterSpacing: '0.05em',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
            textTransform: 'uppercase',
            transition: 'all 0.25s ease',
            '&:hover': {
              background: 'linear-gradient(90deg, #003366 0%, #001f3f 100%)',
              boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)',
            },
          }}
        >
          LOGIN
        </MUIButton>
      </Box>

      {/* Circle Profile Image Carousel */}
      <Box
        mt={1}
        mb={2}
        width={120}
        height={120}
        borderRadius="50%"
        overflow="hidden"
        boxShadow="0 0 10px rgba(0,0,0,0.15)"
        display="flex"
        justifyContent="center"
        alignItems="center"
      >
        <img
          src={profileImages[currentImageIndex]}
          alt={`Profile ${currentImageIndex + 1}`}
          style={{
            width: '100%',
            height: '100%',
            objectFit: 'cover',
            transition: 'opacity 0.5s ease-in-out',
          }}
          key={currentImageIndex}
        />
      </Box>

      {/* Stricbuzz Branding */}
      <Typography
        variant="h6"
        style={{
          marginTop:'8px',
          fontWeight: 'bold',
          letterSpacing: '1px',
          color: '#002244',
        }}
      >
        StricBuzz
      </Typography>
    </Box>
  );
};

export default UserLogin;







import React, { useState, useEffect } from 'react';
import { Box, TextField, Typography, Checkbox, FormControlLabel, Button as MUIButton } from '@mui/material';
import img1 from '../images/1.jpg';
import img2 from '../images/2.jpg';
import img3 from '../images/3.jpg';
import img4 from '../images/4.jpg';
import img5 from '../images/5.jpg';
import img6 from '../images/6.jpg';
import img7 from '../images/7.jpg';
import img8 from '../images/8.jpg';
import img9 from '../images/9.jpg';
import img10 from '../images/10.jpg';
import img11 from '../images/11.jpg';

const profileImages = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11];

const UserLogin = ({ email, password, setEmail, setPassword, onSubmit, error, clearError }) => {
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImageIndex((prev) => (prev + 1) % profileImages.length);
    }, 2000);
    return () => clearInterval(interval);
  }, []);

  // Clear error on input focus by calling parent's clearError
  const handleFocus = () => {
    if (error && clearError) clearError();
  };

  // Local handler to call parent's onSubmit
  const handleSubmit = () => {
    onSubmit();
  };

  return (
    <Box
      display="flex"
      flexDirection="column"
      justifyContent="center"
      alignItems="center"
      height="100vh"
      bgcolor="#ffffff"
      width="100vw"
      minHeight="100vh"
    >
      {/* Logo */}
      <img
        src="/assets/logos.png"
        alt="Logo"
        style={{ width: '170px', marginBottom: '4px', marginTop: '-30px' }}
      />

      {/* Login Box */}
      <Box
        width="350px"
        padding="32px"
        bgcolor="white"
        borderRadius="12px"
        textAlign="center"
      >
        <Box mb={-1} display="flex" justifyContent="center">
          <img
            src="/assets/userlogin.png"
            alt="Logo"
            style={{ height: 80, objectFit: 'contain', marginTop: '-15px' }}
          />
        </Box>

        <TextField
          type="email"
          label="Email"
          variant="outlined"
          fullWidth
          margin="normal"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          onFocus={handleFocus}
          sx={{
            '& .MuiOutlinedInput-root': {
              borderRadius: '12px',
            },
          }}
        />

        <TextField
          type="password"
          label="Password"
          variant="outlined"
          fullWidth
          margin="normal"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          onKeyDown={(e) => e.key === 'Enter' && handleSubmit()}
          onFocus={handleFocus}
          sx={{
            '& .MuiOutlinedInput-root': {
              borderRadius: '12px',
            },
          }}
        />

        {/* Error message with fixed height to prevent layout shift */}
        <Box
          height={24} // fix height to reserve space
          mt={1}
          mb={2}
          display="flex"
          alignItems="center"
        >
          <Typography
            variant="body2"
            color="error"
            sx={{
              visibility: error ? 'visible' : 'hidden',
              whiteSpace: 'nowrap',
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              width: '100%',
            }}
          >
            {error || ' '}
          </Typography>
        </Box>

        <Box
          display="flex"
          justifyContent="space-between"
          alignItems="center"
          mt={1}
          mb={2}
        >
          <FormControlLabel
            control={<Checkbox size="small" color="primary" />}
            label={
              <Typography
                variant="body2"
                color="textSecondary"
                sx={{ fontWeight: 500, fontSize: '0.875rem' }}
              >
                Remember me
              </Typography>
            }
            sx={{ m: 0 }}
          />

          <Typography
            variant="body2"
            color="primary"
            sx={{
              cursor: 'pointer',
              textDecoration: 'none',
              fontWeight: 600,
              '&:hover': {
                textDecoration: 'none',
                color: 'primary.dark',
              },
            }}
          >
            Forgot Password?
          </Typography>
        </Box>

        <MUIButton
          variant="contained"
          fullWidth
          onClick={handleSubmit}
          sx={{
            background: 'linear-gradient(90deg, #001f3f 0%, #003366 100%)',
            color: '#fff',
            fontWeight: 600,
            borderRadius: 1.5,
            paddingY: 1.2,
            fontSize: '1rem',
            letterSpacing: '0.05em',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
            textTransform: 'uppercase',
            transition: 'all 0.25s ease',
            '&:hover': {
              background: 'linear-gradient(90deg, #003366 0%, #001f3f 100%)',
              boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)',
            },
          }}
        >
          LOGIN
        </MUIButton>
      </Box>

      {/* Circle Profile Image Carousel */}
      <Box
        mt={1}
        mb={2}
        width={120}
        height={120}
        borderRadius="50%"
        overflow="hidden"
        boxShadow="0 0 10px rgba(0,0,0,0.15)"
        display="flex"
        justifyContent="center"
        alignItems="center"
      >
        <img
          src={profileImages[currentImageIndex]}
          alt={`Profile ${currentImageIndex + 1}`}
          style={{
            width: '100%',
            height: '100%',
            objectFit: 'cover',
            transition: 'opacity 0.5s ease-in-out',
          }}
          key={currentImageIndex}
        />
      </Box>

      {/* Stricbuzz Branding */}
      <Typography
        variant="h6"
        style={{
          marginTop: '8px',
          fontWeight: 'bold',
          letterSpacing: '1px',
          color: '#002244',
        }}
      >
        StricBuzz
      </Typography>
    </Box>
  );
};

export default UserLogin;
